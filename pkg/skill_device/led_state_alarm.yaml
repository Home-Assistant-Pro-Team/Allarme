homeassistant:
  customize:
    package.node_anchors:
        Allarme: &alarm alarm_control_panel.home_alarm
        Led o luce stato allarme: &led switch.led_allarme

# LED ALLARME ACCESO FISSO QUANDO INSERITO, SPENTO QUANDO DISARMATO, LAMPAGGIANTE SE SCATTATO FINO AL RIENTRO A CASA (+10MIN)
automation:
- alias: Led Stato Allarme
  id: led_state_alarm
  mode: single
  trigger:
  - platform: state
    entity_id: *alarm
    to: 
      - arming
      - disarmed
      - triggered
  action:
    - alias: Gestisci led avviso in base allo stato dell'allamarme
      choose:
      - conditions:
        - "{{trigger.to_state.state == 'arming'}}"
        sequence:
        - service: switch.turn_on
          target:
            entity_id: *led
      - conditions:
        - "{{trigger.to_state.state == 'disarmed'}}"
        sequence:
        - service: switch.turn_off
          target:
            entity_id: *led
      - conditions:
        - "{{trigger.to_state.state == 'triggered'}}"
        sequence:
        - repeat:
            until:
            - or:
              - condition: state
                entity_id: *alarm
                state: disarmed
                for: '00:10:00'
              - "{{ trigger.to_state.state == 'disarmed' and trigger.from_state.state == 'triggered'}}"  # condizione per false alarm (blocchi allarme)
            sequence:
            - service: switch.turn_on
              target:
                entity_id: *led
            - delay:
                seconds: 2
            - service: switch.turn_off
              target:
                entity_id: *led
            - delay:
                seconds: 2
